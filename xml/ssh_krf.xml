<?xml version="1.0"?>
<book isbn="">
  <status>online</status>
  <headline>SSH, Secure Shell</headline>
  <authors>Maik Vattersen, Jan Marienfeld, Gerhard Fabek</authors>
  <keywords>ssh, tcp, secure, shell</keywords>
  <color>#00589D</color>
  <cfs>32pt</cfs>
  <image>http://exigem.de/files/terminal1-150x150.png</image>
  <abstract>Kurzform</abstract>
  <index>Inhaltsverzeichnis</index>
  <description>[b]Anleitung[/b]&#xD;
Ihr verbindet euch per ssh Befehl auf euren Server. Dieser sendet einen willk&#xFC;rlichen Text zur&#xFC;ck euren SSH-Clienten. Dieser verwendet nun den Schl&#xFC;ssel, den Text und euer Passwort (oder auch nicht) und sendet diese Daten an den Server zur&#xFC;ck. Der Server vergleicht nur noch die Daten miteinander. Die gesamte Kommunikation ist verschl&#xFC;sselt, dadurch werden Anrgiffe und &#x201C;Man in the Middle&#x201D; Szenarien sehr viel schwieriger. Funktioniert auf allen Unix basierenden Systemen wie viele Linux und Apfel OSX. Unter Windows bekommt man Terminalverbindungen mit Hilfe des http://www.putty.org/ Programms, welches auch das Schl&#xFC;ssel basierte sowie das Zertifikat basierte Verfahren beherrscht.&#xD;
&#xD;
Und so wird es gemacht:&#xD;
&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2013;&#xD;
In diesem Tutorial verwendete Parameter:&#xD;
&#xD;
USERNAME = Der Name des Benutzers auf dem System&#xD;
SERVER = Der Name eures Servers, auf den ihr verbinden wollt&#xD;
EDITOR = Der Name eures Texteditors (vi, nano, joe)&#xD;
&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2013;&#xD;
&#xD;
Die Schl&#xFC;sseldatei wird mit dem folgenden Befehl erstellt&#xD;
(nicht vergessen: Passwort oder kein Passwort!):&#xD;
$ ssh-keygen -b 2048 -q -f ~/.ssh/id_rsa -t rsa&#xD;
&#xD;
Den SSH-Clienten einrichten (Folgende Stellen sollten auskommentiert sein oder eingef&#xFC;gt werden):&#xD;
$ EDITOR /etc/ssh/ssh_config&#xD;
IdentityFile ~/.ssh/id_rsa&#xD;
Protocol 2&#xD;
&#x2026;&#xD;
&#xD;
Nun sollte die Schl&#xFC;sseldatei auf den Server in die richtige Datei kopiert werden.&#xD;
&#xD;
Wenn man noch normalen Passwortzugang hat bekommt ihr das mit diesem Befehl in einem Rutsch erledigt:&#xD;
$ cat ~/.ssh/*.pub | ssh USERNAME@SERVER &#x2018;umask 077; cat \ &gt;&gt;.ssh/authorized_keys&#x2019;&#xD;
&#xD;
Falls es dabei Probleme gibt, kann man das ganze auch mit dem scp Befehl versuchen. Hier m&#xFC;sst ihr danach noch die Datei manuel auslesen und in die Datei mit den Authorisierungsschl&#xFC;sseln kopieren:&#xD;
$ scp -P 22 .ssh/id_rsa.pub USERNAME@SERVER:.ssh/id_rsa.pup&#xD;
id_rsa.pub 100% 393 0.4KB/s 00:00&#xD;
$ ssh -p 22 USERNAME@SERVER&#xD;
$ cat .ssh/id_rsa.pub &gt; .ssh/authorized_keys&#xD;
&#xD;
Danach auf den Server verbinden (noch ohne das Schl&#xFC;sselverfahren) und dort die Dateirechte anpassen.&#xD;
$ ssh -p 22 USERNAME@SERVER&#xD;
$ chmod 700 -R ~/.ssh&#xD;
&#xD;
Auf dem Server m&#xFC;sste Ihr darauf achten das der SSH-Daemon als root Benutzer richtig eingerichtet wurde (Hier m&#xFC;ssen wir ein wenig mehr beachten):&#xD;
$ EDITOR /etc/ssh/sshd_config&#xD;
Protocol 2&#xD;
PermitRootLogin no&#xD;
StrictModes yes&#xD;
&#xD;
PubkeyAuthentication yes&#xD;
AuthorizedKeysFile .ssh/authorized_keys&#xD;
&#xD;
PasswordAuthentication no&#xD;
PermitRootLogin without-password&#xD;
&#x2026;&#xD;
&#xD;
Danach braucht man nur noch den Daemon neu starten und sollte nicht mehr nach seinem Passwort gefragt werden, sondern nach der Passphrase f&#xFC;r die lokale Schl&#xFC;sseldatei.&#xD;
Enter passphrase for key &#x2018;/home/vaddi/.ssh/id_rsa&#x2019;:&#xD;
&#xD;
Um das aussperren zu vermeiden teste ich das ganze indem ich mir die Shell, womit&#xD;
ich noch verbunden bin offen lasse. Von dort aus ist man immer noch im System auf dem angemeldet, auch wenn man den sshd schon neu gestartet hat. In den Log Dateien findet man oft alle notwendigen Anhaltspunkte. Bei Problemen kann man auch &#x201C;ssh -d&#x201D; verwenden um mehr Informationen zu bekommen.&#xD;
&#xD;
Um Bruteforce-Angriffen entgegenzuwirken empfiehlt es sich zus&#xE4;tzlich das Programm http://www.fail2ban.org/ zu installieren, auf Debian basierenden Systemen ist das mit dem folgenden Befehl erledigt. SSH wird ohne weiteres zu tun &#xFC;berwacht, alle anderen Programme wie Apache, Postfix usw. m&#xFC;ssen jedoch manuel in der Konfigdatei aktiviert werden. weitere Infos dazu findet Ihr unter der Dokumentationsseite.&#xD;
$ sudo apt-get install fail2ban</description>
  <colophone>Desweiteren kann man noch eine ~/.ssh/config anlegen&#xD;
&#xD;
Host root # die Bezeichnung deines Short-Cut&#xD;
User root # User der Verbinden soll&#xD;
Port 123456 # Port (Standard 21)&#xD;
HostName exigem.com # Hier die IP oder die Domain des Servers&#xD;
&#xD;
[Quellen]&#xD;
$ man ssh&#xD;
http://www.schlittermann.de/doc/ssh.html</colophone>
  <links>
    <link>http://www.oreilly.de/catalog/9780596008956/</link>
    <link>http://exigem.de/2011/03/11/tutorial-ssh-rsa-schlusseldatei/</link>
    <link>http://exigem.de/2011/03/11/ssh-shortcuts/</link>
  </links>
  <version>v 0.1</version>
  <lent>im Regal</lent>
  <lent_name>Jan Marienfeldt</lent_name>
  <lent_date>17.03.2012</lent_date>
</book>
